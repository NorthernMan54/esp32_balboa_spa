; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
description = Balboa Spa WiFi Module
default_envs = ESP32ota

data_dir = balboa-spa/dist

[libraries]
CircularBuffer = rlogiacco/CircularBuffer @ ^1.3.3
pubsubclient = PubSubClient@2.8
arduinojson = ArduinoJson@6.18.3
wifimanager32 = https://github.com/tzapu/WiFiManager.git#9f5981e
Ticker = sstaub/TickTwo@^4.4.0
arduinolog = thijse/ArduinoLog@1.1.1
DallasTemperature = milesburton/DallasTemperature @ ^3.11.0
CRC8 = RobTillaart/CRC
ESPAsyncWebServer = https://github.com/me-no-dev/ESPAsyncWebServer.git
base64 = https://github.com/Densaugeo/base64_arduino.git
telnet = jandrassy/TelnetStream
time = PaulStoffregen/Time

[env:ESP32serial]
platform = espressif32@6.1.0
board = esp32dev
monitor_filters = esp32_exception_decoder
framework = arduino
build_type = debug
board_build.filesystem = littlefs
board_build.partitions = spa_module.csv
extra_scripts = post:scripts/extra_script.py

lib_deps = 
	${libraries.wifimanager32}
	${libraries.CircularBuffer}
	${libraries.PubSubClient}
	${libraries.ArduinoJson}
	${libraries.Ticker}
	${libraries.arduinolog}
	${libraries.DallasTemperature}
	${libraries.CRC8}
	${libraries.ESPAsyncWebServer}
	${libraries.base64}
	${libraries.telnet}
	${libraries.time}

build_flags =
  '-DLOG_LEVEL=LOG_LEVEL_VERBOSE'
;  '-DPRODUCTION'
;	'-DLOCAL_CONNECT'
  '-DLOCAL_CLIENT'
;  '-DREMOTE_CLIENT'
	'-DTELNET_LOG'

monitor_port = /dev/cu.usbserial-0001
monitor_speed = 115200
upload_port = /dev/cu.usbserial-0001
upload_speed = 921600

[env:ESP32ota]
platform = espressif32@6.1.0
board = esp32dev
monitor_filters = esp32_exception_decoder
framework = arduino
build_type = debug
board_build.filesystem = littlefs
board_build.partitions = spa_module.csv
extra_scripts = post:scripts/extra_script.py

lib_deps = 
	${libraries.wifimanager32}
	${libraries.CircularBuffer}
	${libraries.PubSubClient}
	${libraries.ArduinoJson}
	${libraries.Ticker}
	${libraries.arduinolog}
	${libraries.DallasTemperature}
	${libraries.CRC8}
	${libraries.ESPAsyncWebServer}
	${libraries.base64}
	${libraries.telnet}
	${libraries.time}
	
build_flags =
  '-DLOG_LEVEL=LOG_LEVEL_VERBOSE'
  '-DPRODUCTION'
;  '-DREMOTE_CLIENT'
	'-DLOCAL_CONNECT'
	'-DLOCAL_CLIENT'
;	 '-DTELNET_LOG'

monitor_port = /dev/cu.usbserial-0001
monitor_speed = 115200

upload_port = spa-3C71BF9DFA90.local.		; connected to serial port
; upload_port = spa-3C71BF9DFA90.local.
upload_protocol = espota

[env:ESP32prodOta]
platform = espressif32@6.1.0
board = esp32dev
monitor_filters = esp32_exception_decoder
framework = arduino
build_type = debug
board_build.filesystem = littlefs
board_build.partitions = spa_module.csv
lib_deps = 
	${libraries.wifimanager32}
	${libraries.CircularBuffer}
	${libraries.PubSubClient}
	${libraries.ArduinoJson}
	${libraries.Ticker}
	${libraries.arduinolog}
	${libraries.DallasTemperature}
	${libraries.CRC8}
	${libraries.ESPAsyncWebServer}
	${libraries.base64}
	${libraries.telnet}
	${libraries.time}

build_flags =
  '-DLOG_LEVEL=LOG_LEVEL_VERBOSE'
  '-DPRODUCTION'
;  '-DREMOTE_CLIENT'	
	'-DLOCAL_CONNECT'
	'-DLOCAL_CLIENT'
	'-DTELNET_LOG'

monitor_port = /dev/cu.usbserial-0001
monitor_speed = 115200

upload_port = spa-240AC4EC20DC.local. ; prod board
upload_protocol = espota